<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<PackAsTool>true</PackAsTool>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageReadmeFile>readme.md</PackageReadmeFile>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<AssemblyName>trparse</AssemblyName>
		<PackageId>trparse</PackageId>
		<Description>
			<![CDATA[
Parses a file, arg, or stdin using a built-in or generated parser.
This program is part of the Trash toolkit.]]>
		</Description>
		<ToolCommandName>trparse</ToolCommandName>
		<RootNamespace>trparse</RootNamespace>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
		<Version>0.23.21</Version>
		<RepositoryUrl>https://github.com/kaby76/Trash/tree/main/src/trparse</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="CommandLineParser" Version="2.9.1" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="../Globbing/TrashGlobbing.csproj" />
		<ProjectReference Include="../AntlrJson/AntlrJson.csproj" />
		<ProjectReference Include="../ParseTreeEditing/ParseTreeEditing.csproj" />
		<ProjectReference Include="../Logger/Logger.csproj" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="../grammars/antlr2/Generated-CSharp/antlr2.csproj" />
		<ProjectReference Include="../grammars/antlr3/Generated-CSharp/antlr3.csproj" />
		<ProjectReference Include="../grammars/antlr4/Generated-CSharp/antlr4.csproj" />
		<ProjectReference Include="../grammars/bison/Generated-CSharp/bison.csproj" />
		<ProjectReference Include="../grammars/javacc/Generated-CSharp/javacc.csproj" />
		<ProjectReference Include="../grammars/lark/Generated-CSharp/lark.csproj" />
		<ProjectReference Include="../grammars/lbnf/Generated-CSharp/lbnf.csproj" />
		<ProjectReference Include="../grammars/princeton/Generated-CSharp/princeton.csproj" />
		<ProjectReference Include="../grammars/rex/Generated-CSharp/rex.csproj" />
		<ProjectReference Include="../grammars/w3cebnf/Generated-CSharp/w3cebnf.csproj" />
		<ProjectReference Include="../grammars/xtext/Generated-CSharp/xtext.csproj" />
	</ItemGroup>
	<ItemGroup>
		<None Include="readme.md" Pack="true" PackagePath="" />
	</ItemGroup>
	<PropertyGroup>
		<RestoreProjectStyle>PackageReference</RestoreProjectStyle>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<NoWarn>1701;1702;3021</NoWarn>
	</PropertyGroup>
	<PropertyGroup>
		<PackageReleaseNotes>(Edit readme.md.)</PackageReleaseNotes>
	</PropertyGroup>
	<Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec">
		<ReadLinesFromFile File="readme.md">
			<Output TaskParameter="Lines" ItemName="ReleaseNoteLines" />
		</ReadLinesFromFile>
		<PropertyGroup>
			<PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
		</PropertyGroup>
	</Target>
	<ItemGroup>
		<EmbeddedResource Include="readme.md" />
	</ItemGroup>
	<ItemGroup>
		<Content Include="$(SolutionDir)grammars\antlr4\bin\Debug\**\*.*" CopyToOutputDirectory="Always" TargetPath="bin\Debug\net8.0\foo\%(Filename)%(Extension)" />
	</ItemGroup>
</Project>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from xtext.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IxtextListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class xtextBaseListener : IxtextListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] xtextParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] xtextParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.grammarID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGrammarID([NotNull] xtextParser.GrammarIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.grammarID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGrammarID([NotNull] xtextParser.GrammarIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractRule([NotNull] xtextParser.AbstractRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractRule([NotNull] xtextParser.AbstractRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractMetamodelDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractMetamodelDeclaration([NotNull] xtextParser.AbstractMetamodelDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractMetamodelDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractMetamodelDeclaration([NotNull] xtextParser.AbstractMetamodelDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.generatedMetamodel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneratedMetamodel([NotNull] xtextParser.GeneratedMetamodelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.generatedMetamodel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneratedMetamodel([NotNull] xtextParser.GeneratedMetamodelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.referencedMetamodel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencedMetamodel([NotNull] xtextParser.ReferencedMetamodelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.referencedMetamodel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencedMetamodel([NotNull] xtextParser.ReferencedMetamodelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation([NotNull] xtextParser.AnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation([NotNull] xtextParser.AnnotationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parserRule_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParserRule_([NotNull] xtextParser.ParserRule_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parserRule_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParserRule_([NotNull] xtextParser.ParserRule_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleNameAndParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleNameAndParams([NotNull] xtextParser.RuleNameAndParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleNameAndParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleNameAndParams([NotNull] xtextParser.RuleNameAndParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] xtextParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] xtextParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.typeRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeRef([NotNull] xtextParser.TypeRefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.typeRef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeRef([NotNull] xtextParser.TypeRefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.alternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlternatives([NotNull] xtextParser.AlternativesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.alternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlternatives([NotNull] xtextParser.AlternativesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.conditionalBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalBranch([NotNull] xtextParser.ConditionalBranchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.conditionalBranch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalBranch([NotNull] xtextParser.ConditionalBranchContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.unorderedGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnorderedGroup([NotNull] xtextParser.UnorderedGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.unorderedGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnorderedGroup([NotNull] xtextParser.UnorderedGroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup([NotNull] xtextParser.GroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup([NotNull] xtextParser.GroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractToken([NotNull] xtextParser.AbstractTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractToken([NotNull] xtextParser.AbstractTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractTokenWithCardinality"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractTokenWithCardinality([NotNull] xtextParser.AbstractTokenWithCardinalityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractTokenWithCardinality"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractTokenWithCardinality([NotNull] xtextParser.AbstractTokenWithCardinalityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAction([NotNull] xtextParser.ActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAction([NotNull] xtextParser.ActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractTerminal([NotNull] xtextParser.AbstractTerminalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractTerminal([NotNull] xtextParser.AbstractTerminalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] xtextParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] xtextParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleCall([NotNull] xtextParser.RuleCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleCall([NotNull] xtextParser.RuleCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.namedArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedArgument([NotNull] xtextParser.NamedArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.namedArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedArgument([NotNull] xtextParser.NamedArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.literalCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralCondition([NotNull] xtextParser.LiteralConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.literalCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralCondition([NotNull] xtextParser.LiteralConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.disjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisjunction([NotNull] xtextParser.DisjunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.disjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisjunction([NotNull] xtextParser.DisjunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConjunction([NotNull] xtextParser.ConjunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.conjunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConjunction([NotNull] xtextParser.ConjunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.negation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegation([NotNull] xtextParser.NegationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.negation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegation([NotNull] xtextParser.NegationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] xtextParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] xtextParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedCondition([NotNull] xtextParser.ParenthesizedConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedCondition([NotNull] xtextParser.ParenthesizedConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parameterReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterReference([NotNull] xtextParser.ParameterReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parameterReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterReference([NotNull] xtextParser.ParameterReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalRuleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalRuleCall([NotNull] xtextParser.TerminalRuleCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalRuleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalRuleCall([NotNull] xtextParser.TerminalRuleCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleID([NotNull] xtextParser.RuleIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleID([NotNull] xtextParser.RuleIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.validID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidID([NotNull] xtextParser.ValidIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.validID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidID([NotNull] xtextParser.ValidIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicatedKeyword([NotNull] xtextParser.PredicatedKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicatedKeyword([NotNull] xtextParser.PredicatedKeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedRuleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicatedRuleCall([NotNull] xtextParser.PredicatedRuleCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedRuleCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicatedRuleCall([NotNull] xtextParser.PredicatedRuleCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] xtextParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] xtextParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignableTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableTerminal([NotNull] xtextParser.AssignableTerminalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignableTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableTerminal([NotNull] xtextParser.AssignableTerminalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedAssignableElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedAssignableElement([NotNull] xtextParser.ParenthesizedAssignableElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedAssignableElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedAssignableElement([NotNull] xtextParser.ParenthesizedAssignableElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignableAlternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableAlternatives([NotNull] xtextParser.AssignableAlternativesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignableAlternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableAlternatives([NotNull] xtextParser.AssignableAlternativesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.crossReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCrossReference([NotNull] xtextParser.CrossReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.crossReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCrossReference([NotNull] xtextParser.CrossReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.crossReferenceableTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCrossReferenceableTerminal([NotNull] xtextParser.CrossReferenceableTerminalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.crossReferenceableTerminal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCrossReferenceableTerminal([NotNull] xtextParser.CrossReferenceableTerminalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedElement([NotNull] xtextParser.ParenthesizedElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedElement([NotNull] xtextParser.ParenthesizedElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicatedGroup([NotNull] xtextParser.PredicatedGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicatedGroup([NotNull] xtextParser.PredicatedGroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalRule([NotNull] xtextParser.TerminalRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalRule([NotNull] xtextParser.TerminalRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalAlternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalAlternatives([NotNull] xtextParser.TerminalAlternativesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalAlternatives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalAlternatives([NotNull] xtextParser.TerminalAlternativesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalGroup([NotNull] xtextParser.TerminalGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalGroup([NotNull] xtextParser.TerminalGroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalToken([NotNull] xtextParser.TerminalTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalToken([NotNull] xtextParser.TerminalTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalTokenElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminalTokenElement([NotNull] xtextParser.TerminalTokenElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalTokenElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminalTokenElement([NotNull] xtextParser.TerminalTokenElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedTerminalElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedTerminalElement([NotNull] xtextParser.ParenthesizedTerminalElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedTerminalElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedTerminalElement([NotNull] xtextParser.ParenthesizedTerminalElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractNegatedToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstractNegatedToken([NotNull] xtextParser.AbstractNegatedTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractNegatedToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstractNegatedToken([NotNull] xtextParser.AbstractNegatedTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.negatedToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegatedToken([NotNull] xtextParser.NegatedTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.negatedToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegatedToken([NotNull] xtextParser.NegatedTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.untilToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntilToken([NotNull] xtextParser.UntilTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.untilToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntilToken([NotNull] xtextParser.UntilTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.wildcard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWildcard([NotNull] xtextParser.WildcardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.wildcard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWildcard([NotNull] xtextParser.WildcardContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.eOF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEOF([NotNull] xtextParser.EOFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.eOF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEOF([NotNull] xtextParser.EOFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.characterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacterRange([NotNull] xtextParser.CharacterRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.characterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacterRange([NotNull] xtextParser.CharacterRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumRule([NotNull] xtextParser.EnumRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumRule([NotNull] xtextParser.EnumRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumLiterals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumLiterals([NotNull] xtextParser.EnumLiteralsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumLiterals"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumLiterals([NotNull] xtextParser.EnumLiteralsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumLiteralDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumLiteralDeclaration([NotNull] xtextParser.EnumLiteralDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumLiteralDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumLiteralDeclaration([NotNull] xtextParser.EnumLiteralDeclarationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}

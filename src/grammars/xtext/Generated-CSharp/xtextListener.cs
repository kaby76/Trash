//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from xtext.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="xtextParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IxtextListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] xtextParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] xtextParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.grammarID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammarID([NotNull] xtextParser.GrammarIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.grammarID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammarID([NotNull] xtextParser.GrammarIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractRule([NotNull] xtextParser.AbstractRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractRule([NotNull] xtextParser.AbstractRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractMetamodelDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractMetamodelDeclaration([NotNull] xtextParser.AbstractMetamodelDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractMetamodelDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractMetamodelDeclaration([NotNull] xtextParser.AbstractMetamodelDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.generatedMetamodel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneratedMetamodel([NotNull] xtextParser.GeneratedMetamodelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.generatedMetamodel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneratedMetamodel([NotNull] xtextParser.GeneratedMetamodelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.referencedMetamodel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferencedMetamodel([NotNull] xtextParser.ReferencedMetamodelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.referencedMetamodel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferencedMetamodel([NotNull] xtextParser.ReferencedMetamodelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] xtextParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] xtextParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parserRule_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParserRule_([NotNull] xtextParser.ParserRule_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parserRule_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParserRule_([NotNull] xtextParser.ParserRule_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleNameAndParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleNameAndParams([NotNull] xtextParser.RuleNameAndParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleNameAndParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleNameAndParams([NotNull] xtextParser.RuleNameAndParamsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] xtextParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] xtextParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.typeRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeRef([NotNull] xtextParser.TypeRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.typeRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeRef([NotNull] xtextParser.TypeRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.alternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlternatives([NotNull] xtextParser.AlternativesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.alternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlternatives([NotNull] xtextParser.AlternativesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.conditionalBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalBranch([NotNull] xtextParser.ConditionalBranchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.conditionalBranch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalBranch([NotNull] xtextParser.ConditionalBranchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.unorderedGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnorderedGroup([NotNull] xtextParser.UnorderedGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.unorderedGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnorderedGroup([NotNull] xtextParser.UnorderedGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup([NotNull] xtextParser.GroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup([NotNull] xtextParser.GroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractToken([NotNull] xtextParser.AbstractTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractToken([NotNull] xtextParser.AbstractTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractTokenWithCardinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractTokenWithCardinality([NotNull] xtextParser.AbstractTokenWithCardinalityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractTokenWithCardinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractTokenWithCardinality([NotNull] xtextParser.AbstractTokenWithCardinalityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] xtextParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] xtextParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractTerminal([NotNull] xtextParser.AbstractTerminalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractTerminal([NotNull] xtextParser.AbstractTerminalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] xtextParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] xtextParser.KeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleCall([NotNull] xtextParser.RuleCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleCall([NotNull] xtextParser.RuleCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.namedArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedArgument([NotNull] xtextParser.NamedArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.namedArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedArgument([NotNull] xtextParser.NamedArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.literalCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralCondition([NotNull] xtextParser.LiteralConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.literalCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralCondition([NotNull] xtextParser.LiteralConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.disjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisjunction([NotNull] xtextParser.DisjunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.disjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisjunction([NotNull] xtextParser.DisjunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConjunction([NotNull] xtextParser.ConjunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.conjunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConjunction([NotNull] xtextParser.ConjunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.negation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegation([NotNull] xtextParser.NegationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.negation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegation([NotNull] xtextParser.NegationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] xtextParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] xtextParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedCondition([NotNull] xtextParser.ParenthesizedConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedCondition([NotNull] xtextParser.ParenthesizedConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parameterReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterReference([NotNull] xtextParser.ParameterReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parameterReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterReference([NotNull] xtextParser.ParameterReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalRuleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalRuleCall([NotNull] xtextParser.TerminalRuleCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalRuleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalRuleCall([NotNull] xtextParser.TerminalRuleCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.ruleID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleID([NotNull] xtextParser.RuleIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.ruleID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleID([NotNull] xtextParser.RuleIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.validID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidID([NotNull] xtextParser.ValidIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.validID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidID([NotNull] xtextParser.ValidIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicatedKeyword([NotNull] xtextParser.PredicatedKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicatedKeyword([NotNull] xtextParser.PredicatedKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedRuleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicatedRuleCall([NotNull] xtextParser.PredicatedRuleCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedRuleCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicatedRuleCall([NotNull] xtextParser.PredicatedRuleCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] xtextParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] xtextParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignableTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignableTerminal([NotNull] xtextParser.AssignableTerminalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignableTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignableTerminal([NotNull] xtextParser.AssignableTerminalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedAssignableElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedAssignableElement([NotNull] xtextParser.ParenthesizedAssignableElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedAssignableElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedAssignableElement([NotNull] xtextParser.ParenthesizedAssignableElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.assignableAlternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignableAlternatives([NotNull] xtextParser.AssignableAlternativesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.assignableAlternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignableAlternatives([NotNull] xtextParser.AssignableAlternativesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.crossReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCrossReference([NotNull] xtextParser.CrossReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.crossReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCrossReference([NotNull] xtextParser.CrossReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.crossReferenceableTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCrossReferenceableTerminal([NotNull] xtextParser.CrossReferenceableTerminalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.crossReferenceableTerminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCrossReferenceableTerminal([NotNull] xtextParser.CrossReferenceableTerminalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedElement([NotNull] xtextParser.ParenthesizedElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedElement([NotNull] xtextParser.ParenthesizedElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.predicatedGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicatedGroup([NotNull] xtextParser.PredicatedGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.predicatedGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicatedGroup([NotNull] xtextParser.PredicatedGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalRule([NotNull] xtextParser.TerminalRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalRule([NotNull] xtextParser.TerminalRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalAlternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalAlternatives([NotNull] xtextParser.TerminalAlternativesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalAlternatives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalAlternatives([NotNull] xtextParser.TerminalAlternativesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalGroup([NotNull] xtextParser.TerminalGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalGroup([NotNull] xtextParser.TerminalGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalToken([NotNull] xtextParser.TerminalTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalToken([NotNull] xtextParser.TerminalTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.terminalTokenElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminalTokenElement([NotNull] xtextParser.TerminalTokenElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.terminalTokenElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminalTokenElement([NotNull] xtextParser.TerminalTokenElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.parenthesizedTerminalElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedTerminalElement([NotNull] xtextParser.ParenthesizedTerminalElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.parenthesizedTerminalElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedTerminalElement([NotNull] xtextParser.ParenthesizedTerminalElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.abstractNegatedToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbstractNegatedToken([NotNull] xtextParser.AbstractNegatedTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.abstractNegatedToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbstractNegatedToken([NotNull] xtextParser.AbstractNegatedTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.negatedToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegatedToken([NotNull] xtextParser.NegatedTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.negatedToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegatedToken([NotNull] xtextParser.NegatedTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.untilToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntilToken([NotNull] xtextParser.UntilTokenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.untilToken"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntilToken([NotNull] xtextParser.UntilTokenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.wildcard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWildcard([NotNull] xtextParser.WildcardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.wildcard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWildcard([NotNull] xtextParser.WildcardContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.eOF"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEOF([NotNull] xtextParser.EOFContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.eOF"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEOF([NotNull] xtextParser.EOFContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.characterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacterRange([NotNull] xtextParser.CharacterRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.characterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacterRange([NotNull] xtextParser.CharacterRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumRule([NotNull] xtextParser.EnumRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumRule([NotNull] xtextParser.EnumRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumLiterals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumLiterals([NotNull] xtextParser.EnumLiteralsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumLiterals"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumLiterals([NotNull] xtextParser.EnumLiteralsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="xtextParser.enumLiteralDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumLiteralDeclaration([NotNull] xtextParser.EnumLiteralDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="xtextParser.enumLiteralDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumLiteralDeclaration([NotNull] xtextParser.EnumLiteralDeclarationContext context);
}

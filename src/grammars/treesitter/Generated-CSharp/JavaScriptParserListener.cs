//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JavaScriptParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JavaScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IJavaScriptParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] JavaScriptParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] JavaScriptParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.sourceElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceElement([NotNull] JavaScriptParser.SourceElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.sourceElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceElement([NotNull] JavaScriptParser.SourceElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] JavaScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] JavaScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] JavaScriptParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] JavaScriptParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] JavaScriptParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] JavaScriptParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportStatement([NotNull] JavaScriptParser.ImportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportStatement([NotNull] JavaScriptParser.ImportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportFromBlock([NotNull] JavaScriptParser.ImportFromBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportFromBlock([NotNull] JavaScriptParser.ImportFromBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.moduleItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleItems([NotNull] JavaScriptParser.ModuleItemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.moduleItems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleItems([NotNull] JavaScriptParser.ModuleItemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportDefault([NotNull] JavaScriptParser.ImportDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportDefault([NotNull] JavaScriptParser.ImportDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportNamespace([NotNull] JavaScriptParser.ImportNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportNamespace([NotNull] JavaScriptParser.ImportNamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importFrom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportFrom([NotNull] JavaScriptParser.ImportFromContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importFrom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportFrom([NotNull] JavaScriptParser.ImportFromContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.aliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAliasName([NotNull] JavaScriptParser.AliasNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.aliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAliasName([NotNull] JavaScriptParser.AliasNameContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExportDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExportDeclaration([NotNull] JavaScriptParser.ExportDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExportDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExportDeclaration([NotNull] JavaScriptParser.ExportDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExportDefaultDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExportDefaultDeclaration([NotNull] JavaScriptParser.ExportDefaultDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExportDefaultDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExportDefaultDeclaration([NotNull] JavaScriptParser.ExportDefaultDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.exportFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExportFromBlock([NotNull] JavaScriptParser.ExportFromBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.exportFromBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExportFromBlock([NotNull] JavaScriptParser.ExportFromBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] JavaScriptParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] JavaScriptParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableStatement([NotNull] JavaScriptParser.VariableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableStatement([NotNull] JavaScriptParser.VariableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationList([NotNull] JavaScriptParser.VariableDeclarationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationList([NotNull] JavaScriptParser.VariableDeclarationListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] JavaScriptParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] JavaScriptParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStatement([NotNull] JavaScriptParser.EmptyStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.emptyStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStatement([NotNull] JavaScriptParser.EmptyStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] JavaScriptParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] JavaScriptParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] JavaScriptParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] JavaScriptParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationStatement([NotNull] JavaScriptParser.IterationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationStatement([NotNull] JavaScriptParser.IterationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.varModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarModifier([NotNull] JavaScriptParser.VarModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.varModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarModifier([NotNull] JavaScriptParser.VarModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] JavaScriptParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] JavaScriptParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] JavaScriptParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] JavaScriptParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] JavaScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] JavaScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.yieldStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterYieldStatement([NotNull] JavaScriptParser.YieldStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.yieldStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitYieldStatement([NotNull] JavaScriptParser.YieldStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithStatement([NotNull] JavaScriptParser.WithStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithStatement([NotNull] JavaScriptParser.WithStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] JavaScriptParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] JavaScriptParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseBlock([NotNull] JavaScriptParser.CaseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseBlock([NotNull] JavaScriptParser.CaseBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseClauses([NotNull] JavaScriptParser.CaseClausesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseClauses([NotNull] JavaScriptParser.CaseClausesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseClause([NotNull] JavaScriptParser.CaseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseClause([NotNull] JavaScriptParser.CaseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.defaultClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultClause([NotNull] JavaScriptParser.DefaultClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.defaultClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultClause([NotNull] JavaScriptParser.DefaultClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.labelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelledStatement([NotNull] JavaScriptParser.LabelledStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.labelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelledStatement([NotNull] JavaScriptParser.LabelledStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowStatement([NotNull] JavaScriptParser.ThrowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowStatement([NotNull] JavaScriptParser.ThrowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.tryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryStatement([NotNull] JavaScriptParser.TryStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.tryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryStatement([NotNull] JavaScriptParser.TryStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.catchProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchProduction([NotNull] JavaScriptParser.CatchProductionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.catchProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchProduction([NotNull] JavaScriptParser.CatchProductionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.finallyProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinallyProduction([NotNull] JavaScriptParser.FinallyProductionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.finallyProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinallyProduction([NotNull] JavaScriptParser.FinallyProductionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.debuggerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebuggerStatement([NotNull] JavaScriptParser.DebuggerStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.debuggerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebuggerStatement([NotNull] JavaScriptParser.DebuggerStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] JavaScriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] JavaScriptParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaration([NotNull] JavaScriptParser.ClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaration([NotNull] JavaScriptParser.ClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassTail([NotNull] JavaScriptParser.ClassTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassTail([NotNull] JavaScriptParser.ClassTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassElement([NotNull] JavaScriptParser.ClassElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassElement([NotNull] JavaScriptParser.ClassElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.methodDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDefinition([NotNull] JavaScriptParser.MethodDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.methodDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDefinition([NotNull] JavaScriptParser.MethodDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterList([NotNull] JavaScriptParser.FormalParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterList([NotNull] JavaScriptParser.FormalParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.formalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterArg([NotNull] JavaScriptParser.FormalParameterArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.formalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterArg([NotNull] JavaScriptParser.FormalParameterArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.lastFormalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastFormalParameterArg([NotNull] JavaScriptParser.LastFormalParameterArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.lastFormalParameterArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastFormalParameterArg([NotNull] JavaScriptParser.LastFormalParameterArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] JavaScriptParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] JavaScriptParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.sourceElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceElements([NotNull] JavaScriptParser.SourceElementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.sourceElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceElements([NotNull] JavaScriptParser.SourceElementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] JavaScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] JavaScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementList([NotNull] JavaScriptParser.ElementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementList([NotNull] JavaScriptParser.ElementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrayElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayElement([NotNull] JavaScriptParser.ArrayElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrayElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayElement([NotNull] JavaScriptParser.ArrayElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyAssignment([NotNull] JavaScriptParser.PropertyAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyAssignment([NotNull] JavaScriptParser.PropertyAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.propertyName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyName([NotNull] JavaScriptParser.PropertyNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.propertyName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyName([NotNull] JavaScriptParser.PropertyNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] JavaScriptParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] JavaScriptParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] JavaScriptParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] JavaScriptParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionSequence([NotNull] JavaScriptParser.ExpressionSequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionSequence([NotNull] JavaScriptParser.ExpressionSequenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleExpression([NotNull] JavaScriptParser.SingleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleExpression([NotNull] JavaScriptParser.SingleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.assignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignable([NotNull] JavaScriptParser.AssignableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.assignable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignable([NotNull] JavaScriptParser.AssignableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectLiteral([NotNull] JavaScriptParser.ObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectLiteral([NotNull] JavaScriptParser.ObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.anonymousFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousFunction([NotNull] JavaScriptParser.AnonymousFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.anonymousFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousFunction([NotNull] JavaScriptParser.AnonymousFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrowFunctionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrowFunctionParameters([NotNull] JavaScriptParser.ArrowFunctionParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrowFunctionParameters([NotNull] JavaScriptParser.ArrowFunctionParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrowFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrowFunctionBody([NotNull] JavaScriptParser.ArrowFunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrowFunctionBody([NotNull] JavaScriptParser.ArrowFunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] JavaScriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] JavaScriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] JavaScriptParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] JavaScriptParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.templateStringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateStringLiteral([NotNull] JavaScriptParser.TemplateStringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.templateStringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateStringLiteral([NotNull] JavaScriptParser.TemplateStringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.templateStringAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemplateStringAtom([NotNull] JavaScriptParser.TemplateStringAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.templateStringAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemplateStringAtom([NotNull] JavaScriptParser.TemplateStringAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericLiteral([NotNull] JavaScriptParser.NumericLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericLiteral([NotNull] JavaScriptParser.NumericLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.bigintLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBigintLiteral([NotNull] JavaScriptParser.BigintLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.bigintLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBigintLiteral([NotNull] JavaScriptParser.BigintLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.getter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetter([NotNull] JavaScriptParser.GetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.getter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetter([NotNull] JavaScriptParser.GetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.setter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetter([NotNull] JavaScriptParser.SetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.setter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetter([NotNull] JavaScriptParser.SetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.identifierName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierName([NotNull] JavaScriptParser.IdentifierNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.identifierName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierName([NotNull] JavaScriptParser.IdentifierNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] JavaScriptParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] JavaScriptParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.reservedWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReservedWord([NotNull] JavaScriptParser.ReservedWordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.reservedWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReservedWord([NotNull] JavaScriptParser.ReservedWordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] JavaScriptParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] JavaScriptParser.KeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.let_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLet_([NotNull] JavaScriptParser.Let_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.let_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLet_([NotNull] JavaScriptParser.Let_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEos([NotNull] JavaScriptParser.EosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEos([NotNull] JavaScriptParser.EosContext context);
}

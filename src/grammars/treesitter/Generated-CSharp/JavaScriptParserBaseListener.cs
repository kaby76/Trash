//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JavaScriptParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IJavaScriptParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class JavaScriptParserBaseListener : IJavaScriptParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] JavaScriptParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] JavaScriptParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.sourceElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceElement([NotNull] JavaScriptParser.SourceElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.sourceElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceElement([NotNull] JavaScriptParser.SourceElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] JavaScriptParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] JavaScriptParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] JavaScriptParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] JavaScriptParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] JavaScriptParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] JavaScriptParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] JavaScriptParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] JavaScriptParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importFromBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportFromBlock([NotNull] JavaScriptParser.ImportFromBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importFromBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportFromBlock([NotNull] JavaScriptParser.ImportFromBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.moduleItems"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleItems([NotNull] JavaScriptParser.ModuleItemsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.moduleItems"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleItems([NotNull] JavaScriptParser.ModuleItemsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportDefault([NotNull] JavaScriptParser.ImportDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportDefault([NotNull] JavaScriptParser.ImportDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importNamespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportNamespace([NotNull] JavaScriptParser.ImportNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importNamespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportNamespace([NotNull] JavaScriptParser.ImportNamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.importFrom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportFrom([NotNull] JavaScriptParser.ImportFromContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.importFrom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportFrom([NotNull] JavaScriptParser.ImportFromContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.aliasName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasName([NotNull] JavaScriptParser.AliasNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.aliasName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasName([NotNull] JavaScriptParser.AliasNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExportDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExportDeclaration([NotNull] JavaScriptParser.ExportDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExportDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExportDeclaration([NotNull] JavaScriptParser.ExportDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExportDefaultDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExportDefaultDeclaration([NotNull] JavaScriptParser.ExportDefaultDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExportDefaultDeclaration</c>
	/// labeled alternative in <see cref="JavaScriptParser.exportStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExportDefaultDeclaration([NotNull] JavaScriptParser.ExportDefaultDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.exportFromBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExportFromBlock([NotNull] JavaScriptParser.ExportFromBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.exportFromBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExportFromBlock([NotNull] JavaScriptParser.ExportFromBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] JavaScriptParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] JavaScriptParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableStatement([NotNull] JavaScriptParser.VariableStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableStatement([NotNull] JavaScriptParser.VariableStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationList([NotNull] JavaScriptParser.VariableDeclarationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationList([NotNull] JavaScriptParser.VariableDeclarationListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] JavaScriptParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] JavaScriptParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] JavaScriptParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.emptyStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] JavaScriptParser.EmptyStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] JavaScriptParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] JavaScriptParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] JavaScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] JavaScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationStatement([NotNull] JavaScriptParser.IterationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationStatement([NotNull] JavaScriptParser.IterationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.varModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarModifier([NotNull] JavaScriptParser.VarModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.varModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarModifier([NotNull] JavaScriptParser.VarModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] JavaScriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] JavaScriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] JavaScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] JavaScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] JavaScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] JavaScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.yieldStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYieldStatement([NotNull] JavaScriptParser.YieldStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.yieldStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYieldStatement([NotNull] JavaScriptParser.YieldStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStatement([NotNull] JavaScriptParser.WithStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStatement([NotNull] JavaScriptParser.WithStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] JavaScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] JavaScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseBlock([NotNull] JavaScriptParser.CaseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseBlock([NotNull] JavaScriptParser.CaseBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseClauses([NotNull] JavaScriptParser.CaseClausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseClauses([NotNull] JavaScriptParser.CaseClausesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.caseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseClause([NotNull] JavaScriptParser.CaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.caseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseClause([NotNull] JavaScriptParser.CaseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.defaultClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultClause([NotNull] JavaScriptParser.DefaultClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.defaultClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultClause([NotNull] JavaScriptParser.DefaultClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.labelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabelledStatement([NotNull] JavaScriptParser.LabelledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.labelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabelledStatement([NotNull] JavaScriptParser.LabelledStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] JavaScriptParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.throwStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] JavaScriptParser.ThrowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.tryStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryStatement([NotNull] JavaScriptParser.TryStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.tryStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryStatement([NotNull] JavaScriptParser.TryStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.catchProduction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatchProduction([NotNull] JavaScriptParser.CatchProductionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.catchProduction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatchProduction([NotNull] JavaScriptParser.CatchProductionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.finallyProduction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinallyProduction([NotNull] JavaScriptParser.FinallyProductionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.finallyProduction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinallyProduction([NotNull] JavaScriptParser.FinallyProductionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.debuggerStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebuggerStatement([NotNull] JavaScriptParser.DebuggerStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.debuggerStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebuggerStatement([NotNull] JavaScriptParser.DebuggerStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] JavaScriptParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] JavaScriptParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] JavaScriptParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] JavaScriptParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassTail([NotNull] JavaScriptParser.ClassTailContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassTail([NotNull] JavaScriptParser.ClassTailContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.classElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassElement([NotNull] JavaScriptParser.ClassElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.classElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassElement([NotNull] JavaScriptParser.ClassElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDefinition([NotNull] JavaScriptParser.MethodDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDefinition([NotNull] JavaScriptParser.MethodDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] JavaScriptParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] JavaScriptParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.formalParameterArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterArg([NotNull] JavaScriptParser.FormalParameterArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.formalParameterArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterArg([NotNull] JavaScriptParser.FormalParameterArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.lastFormalParameterArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastFormalParameterArg([NotNull] JavaScriptParser.LastFormalParameterArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.lastFormalParameterArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastFormalParameterArg([NotNull] JavaScriptParser.LastFormalParameterArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] JavaScriptParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] JavaScriptParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.sourceElements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceElements([NotNull] JavaScriptParser.SourceElementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.sourceElements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceElements([NotNull] JavaScriptParser.SourceElementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] JavaScriptParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] JavaScriptParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementList([NotNull] JavaScriptParser.ElementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementList([NotNull] JavaScriptParser.ElementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrayElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayElement([NotNull] JavaScriptParser.ArrayElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrayElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayElement([NotNull] JavaScriptParser.ArrayElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.propertyAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyAssignment([NotNull] JavaScriptParser.PropertyAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.propertyAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyAssignment([NotNull] JavaScriptParser.PropertyAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.propertyName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyName([NotNull] JavaScriptParser.PropertyNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.propertyName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyName([NotNull] JavaScriptParser.PropertyNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] JavaScriptParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] JavaScriptParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] JavaScriptParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] JavaScriptParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.expressionSequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionSequence([NotNull] JavaScriptParser.ExpressionSequenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.expressionSequence"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionSequence([NotNull] JavaScriptParser.ExpressionSequenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.singleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleExpression([NotNull] JavaScriptParser.SingleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.singleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleExpression([NotNull] JavaScriptParser.SingleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.assignable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignable([NotNull] JavaScriptParser.AssignableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.assignable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignable([NotNull] JavaScriptParser.AssignableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.objectLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectLiteral([NotNull] JavaScriptParser.ObjectLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.objectLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectLiteral([NotNull] JavaScriptParser.ObjectLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.anonymousFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousFunction([NotNull] JavaScriptParser.AnonymousFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.anonymousFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousFunction([NotNull] JavaScriptParser.AnonymousFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrowFunctionParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowFunctionParameters([NotNull] JavaScriptParser.ArrowFunctionParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowFunctionParameters([NotNull] JavaScriptParser.ArrowFunctionParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.arrowFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrowFunctionBody([NotNull] JavaScriptParser.ArrowFunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.arrowFunctionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrowFunctionBody([NotNull] JavaScriptParser.ArrowFunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] JavaScriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] JavaScriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] JavaScriptParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] JavaScriptParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.templateStringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStringLiteral([NotNull] JavaScriptParser.TemplateStringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.templateStringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStringLiteral([NotNull] JavaScriptParser.TemplateStringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.templateStringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateStringAtom([NotNull] JavaScriptParser.TemplateStringAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.templateStringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateStringAtom([NotNull] JavaScriptParser.TemplateStringAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.numericLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericLiteral([NotNull] JavaScriptParser.NumericLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.numericLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericLiteral([NotNull] JavaScriptParser.NumericLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.bigintLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBigintLiteral([NotNull] JavaScriptParser.BigintLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.bigintLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBigintLiteral([NotNull] JavaScriptParser.BigintLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.getter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetter([NotNull] JavaScriptParser.GetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.getter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetter([NotNull] JavaScriptParser.GetterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.setter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetter([NotNull] JavaScriptParser.SetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.setter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetter([NotNull] JavaScriptParser.SetterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.identifierName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierName([NotNull] JavaScriptParser.IdentifierNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.identifierName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierName([NotNull] JavaScriptParser.IdentifierNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] JavaScriptParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] JavaScriptParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.reservedWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReservedWord([NotNull] JavaScriptParser.ReservedWordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.reservedWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReservedWord([NotNull] JavaScriptParser.ReservedWordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] JavaScriptParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] JavaScriptParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.let_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLet_([NotNull] JavaScriptParser.Let_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.let_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLet_([NotNull] JavaScriptParser.Let_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="JavaScriptParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEos([NotNull] JavaScriptParser.EosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="JavaScriptParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEos([NotNull] JavaScriptParser.EosContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PestParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="PestParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPestParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.grammar_rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammar_rules([NotNull] PestParser.Grammar_rulesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.grammar_rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammar_rules([NotNull] PestParser.Grammar_rulesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.grammar_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrammar_rule([NotNull] PestParser.Grammar_ruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.grammar_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrammar_rule([NotNull] PestParser.Grammar_ruleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifier([NotNull] PestParser.ModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifier([NotNull] PestParser.ModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.silent_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSilent_modifier([NotNull] PestParser.Silent_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.silent_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSilent_modifier([NotNull] PestParser.Silent_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomic_modifier([NotNull] PestParser.Atomic_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomic_modifier([NotNull] PestParser.Atomic_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.compound_atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompound_atomic_modifier([NotNull] PestParser.Compound_atomic_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.compound_atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompound_atomic_modifier([NotNull] PestParser.Compound_atomic_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.non_atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNon_atomic_modifier([NotNull] PestParser.Non_atomic_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.non_atomic_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNon_atomic_modifier([NotNull] PestParser.Non_atomic_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] PestParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] PestParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] PestParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] PestParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNode([NotNull] PestParser.NodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNode([NotNull] PestParser.NodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.terminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminal([NotNull] PestParser.TerminalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.terminal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminal([NotNull] PestParser.TerminalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.prefix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefix_operator([NotNull] PestParser.Prefix_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.prefix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefix_operator([NotNull] PestParser.Prefix_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.infix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfix_operator([NotNull] PestParser.Infix_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.infix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfix_operator([NotNull] PestParser.Infix_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.postfix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_operator([NotNull] PestParser.Postfix_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.postfix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_operator([NotNull] PestParser.Postfix_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.positive_predicate_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositive_predicate_operator([NotNull] PestParser.Positive_predicate_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.positive_predicate_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositive_predicate_operator([NotNull] PestParser.Positive_predicate_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.negative_predicate_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegative_predicate_operator([NotNull] PestParser.Negative_predicate_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.negative_predicate_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegative_predicate_operator([NotNull] PestParser.Negative_predicate_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.sequence_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence_operator([NotNull] PestParser.Sequence_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.sequence_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence_operator([NotNull] PestParser.Sequence_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.choice_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChoice_operator([NotNull] PestParser.Choice_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.choice_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChoice_operator([NotNull] PestParser.Choice_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.optional_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptional_operator([NotNull] PestParser.Optional_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.optional_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptional_operator([NotNull] PestParser.Optional_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_operator([NotNull] PestParser.Repeat_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_operator([NotNull] PestParser.Repeat_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_once_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_once_operator([NotNull] PestParser.Repeat_once_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_once_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_once_operator([NotNull] PestParser.Repeat_once_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_exact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_exact([NotNull] PestParser.Repeat_exactContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_exact"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_exact([NotNull] PestParser.Repeat_exactContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_min"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_min([NotNull] PestParser.Repeat_minContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_min"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_min([NotNull] PestParser.Repeat_minContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_max"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_max([NotNull] PestParser.Repeat_maxContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_max"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_max([NotNull] PestParser.Repeat_maxContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.repeat_min_max"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeat_min_max([NotNull] PestParser.Repeat_min_maxContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.repeat_min_max"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeat_min_max([NotNull] PestParser.Repeat_min_maxContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.push"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPush([NotNull] PestParser.PushContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.push"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPush([NotNull] PestParser.PushContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="PestParser.peek_slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPeek_slice([NotNull] PestParser.Peek_sliceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="PestParser.peek_slice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPeek_slice([NotNull] PestParser.Peek_sliceContext context);
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from rexParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="rexParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IrexParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.grammar_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGrammar_([NotNull] rexParser.Grammar_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.prolog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProlog([NotNull] rexParser.PrologContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.processingInstruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcessingInstruction([NotNull] rexParser.ProcessingInstructionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxDefinition([NotNull] rexParser.SyntaxDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxProduction([NotNull] rexParser.SyntaxProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxChoice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxChoice([NotNull] rexParser.SyntaxChoiceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxSequence([NotNull] rexParser.SyntaxSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxItem([NotNull] rexParser.SyntaxItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.syntaxPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSyntaxPrimary([NotNull] rexParser.SyntaxPrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalDefinition([NotNull] rexParser.LexicalDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalProduction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalProduction([NotNull] rexParser.LexicalProductionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.contextChoice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContextChoice([NotNull] rexParser.ContextChoiceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalChoice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalChoice([NotNull] rexParser.LexicalChoiceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.contextExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContextExpression([NotNull] rexParser.ContextExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalSequence([NotNull] rexParser.LexicalSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalItem([NotNull] rexParser.LexicalItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.lexicalPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLexicalPrimary([NotNull] rexParser.LexicalPrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.nameOrString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameOrString([NotNull] rexParser.NameOrStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.context"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContext([NotNull] rexParser.ContextContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.charCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharCode([NotNull] rexParser.CharCodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.unicode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnicode([NotNull] rexParser.UnicodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.charClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharClass([NotNull] rexParser.CharClassContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOption([NotNull] rexParser.OptionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.preference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreference([NotNull] rexParser.PreferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.delimiter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDelimiter([NotNull] rexParser.DelimiterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.equivalence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquivalence([NotNull] rexParser.EquivalenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.equivalenceCharRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquivalenceCharRange([NotNull] rexParser.EquivalenceCharRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.encore"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEncore([NotNull] rexParser.EncoreContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="rexParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] rexParser.NameContext context);
}

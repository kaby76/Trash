//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from pegen_v3_10Lexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class pegen_v3_10Lexer : Adaptor {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ACTION=1, MEMO=2, OP=3, NAME=4, NUMBER=5, STRING=6, LPAR=7, RPAR=8, LSQB=9, 
		RSQB=10, COLON=11, COMMA=12, SEMI=13, PLUS=14, MINUS=15, STAR=16, SLASH=17, 
		VBAR=18, AMPER=19, LESS=20, GREATER=21, EQUAL=22, DOT=23, PERCENT=24, 
		RBRACE=25, EQEQUAL=26, NOTEQUAL=27, LESSEQUAL=28, GREATEREQUAL=29, TILDE=30, 
		CIRCUMFLEX=31, LEFTSHIFT=32, RIGHTSHIFT=33, DOUBLESTAR=34, PLUSEQUAL=35, 
		MINEQUAL=36, STAREQUAL=37, SLASHEQUAL=38, PERCENTEQUAL=39, AMPEREQUAL=40, 
		VBAREQUAL=41, CIRCUMFLEXEQUAL=42, LEFTSHIFTEQUAL=43, RIGHTSHIFTEQUAL=44, 
		DOUBLESTAREQUAL=45, DOUBLESLASH=46, DOUBLESLASHEQUAL=47, AT=48, ATEQUAL=49, 
		RARROW=50, ELLIPSIS=51, COLONEQUAL=52, DOLLAR=53, BANG=54, QUESTION=55, 
		SKIP_=56, UNTERMINATED_ACTION=57, STRING2=58, CHAR=59, LBRACE=60, STRINGESC=61;
	public const int
		STRESCAPE=1, STRINGMODE=2, CHARESCAPE=3, CHARMODE=4, ACTION_MODE=5;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "STRESCAPE", "STRINGMODE", "CHARESCAPE", "CHARMODE", "ACTION_MODE"
	};

	public static readonly string[] ruleNames = {
		"MEMO", "OP", "NAME", "LETTER", "CAPITAL", "SMALL", "DIGIT", "NUMBER", 
		"STRING", "STRING2", "CHAR", "NEWLINE", "LPAR", "RPAR", "LSQB", "RSQB", 
		"COLON", "COMMA", "SEMI", "PLUS", "MINUS", "STAR", "SLASH", "VBAR", "AMPER", 
		"LESS", "GREATER", "EQUAL", "DOT", "PERCENT", "LBRACE", "RBRACE", "EQEQUAL", 
		"NOTEQUAL", "LESSEQUAL", "GREATEREQUAL", "TILDE", "CIRCUMFLEX", "LEFTSHIFT", 
		"RIGHTSHIFT", "DOUBLESTAR", "PLUSEQUAL", "MINEQUAL", "STAREQUAL", "SLASHEQUAL", 
		"PERCENTEQUAL", "AMPEREQUAL", "VBAREQUAL", "CIRCUMFLEXEQUAL", "LEFTSHIFTEQUAL", 
		"RIGHTSHIFTEQUAL", "DOUBLESTAREQUAL", "DOUBLESLASH", "DOUBLESLASHEQUAL", 
		"AT", "ATEQUAL", "RARROW", "ELLIPSIS", "COLONEQUAL", "DOLLAR", "BANG", 
		"QUESTION", "SKIP_", "SPACES", "COMMENT", "LINE_JOINING", "Escapable", 
		"STRESCAPED", "STRINGESC", "STRINGEND", "STRINGTEXT", "CHARESCAPED", "CHARESC", 
		"CHAREND", "CHARTEXT", "NESTED_ACTION", "ACTION_ESCAPE", "ACTION", "CLOSE", 
		"UNTERMINATED_ACTION", "CONTENT", "EscAny", "Esc"
	};


	public pegen_v3_10Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public pegen_v3_10Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'memo'", "'op'", null, null, null, "'('", "')'", "'['", "']'", 
		"':'", "','", "';'", "'+'", "'-'", "'*'", "'/'", "'|'", "'&'", "'<'", 
		"'>'", "'='", "'.'", "'%'", "'}'", "'=='", "'!='", "'<='", "'>='", "'~'", 
		"'^'", "'<<'", "'>>'", "'**'", "'+='", "'-='", "'*='", "'/='", "'%='", 
		"'&='", "'|='", "'^='", "'<<='", "'>>='", "'**='", "'//'", "'//='", "'@'", 
		"'@='", "'->'", "'...'", "':='", "'$'", "'!'", "'?'", null, null, "'\"'", 
		"'''", "'{'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "ACTION", "MEMO", "OP", "NAME", "NUMBER", "STRING", "LPAR", "RPAR", 
		"LSQB", "RSQB", "COLON", "COMMA", "SEMI", "PLUS", "MINUS", "STAR", "SLASH", 
		"VBAR", "AMPER", "LESS", "GREATER", "EQUAL", "DOT", "PERCENT", "RBRACE", 
		"EQEQUAL", "NOTEQUAL", "LESSEQUAL", "GREATEREQUAL", "TILDE", "CIRCUMFLEX", 
		"LEFTSHIFT", "RIGHTSHIFT", "DOUBLESTAR", "PLUSEQUAL", "MINEQUAL", "STAREQUAL", 
		"SLASHEQUAL", "PERCENTEQUAL", "AMPEREQUAL", "VBAREQUAL", "CIRCUMFLEXEQUAL", 
		"LEFTSHIFTEQUAL", "RIGHTSHIFTEQUAL", "DOUBLESTAREQUAL", "DOUBLESLASH", 
		"DOUBLESLASHEQUAL", "AT", "ATEQUAL", "RARROW", "ELLIPSIS", "COLONEQUAL", 
		"DOLLAR", "BANG", "QUESTION", "SKIP_", "UNTERMINATED_ACTION", "STRING2", 
		"CHAR", "LBRACE", "STRINGESC"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "pegen_v3_10Lexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static pegen_v3_10Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 77 : return ACTION_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool ACTION_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return  this.AtEnd() ;
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,0,61,485,6,-1,6,-1,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,
		3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
		2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,
		2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
		2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,
		2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,
		2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,
		2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,
		2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,
		2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,
		2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,
		2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
		2,82,7,82,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,185,8,2,
		10,2,12,2,188,9,2,1,3,1,3,3,3,192,8,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,4,7,
		201,8,7,11,7,12,7,202,1,8,1,8,1,8,1,8,1,8,5,8,210,8,8,10,8,12,8,213,9,
		8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,5,8,223,8,8,10,8,12,8,226,9,8,1,8,1,
		8,1,8,3,8,231,8,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,4,
		11,244,8,11,11,11,12,11,245,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,
		16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,
		23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,
		30,1,30,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,
		34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,
		39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,
		44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,
		49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,
		52,1,53,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,
		57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,
		62,1,62,3,62,384,8,62,1,62,1,62,1,63,4,63,389,8,63,11,63,12,63,390,1,64,
		1,64,5,64,395,8,64,10,64,12,64,398,9,64,1,65,1,65,3,65,402,8,65,1,65,3,
		65,405,8,65,1,65,1,65,3,65,409,8,65,1,66,1,66,1,67,1,67,1,67,1,67,1,67,
		1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,3,70,
		431,8,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,
		73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,
		76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,
		79,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,2,211,224,
		0,83,6,2,8,3,10,4,12,0,14,0,16,0,18,0,20,5,22,6,24,58,26,59,28,0,30,7,
		32,8,34,9,36,10,38,11,40,12,42,13,44,14,46,15,48,16,50,17,52,18,54,19,
		56,20,58,21,60,22,62,23,64,24,66,60,68,25,70,26,72,27,74,28,76,29,78,30,
		80,31,82,32,84,33,86,34,88,35,90,36,92,37,94,38,96,39,98,40,100,41,102,
		42,104,43,106,44,108,45,110,46,112,47,114,48,116,49,118,50,120,51,122,
		52,124,53,126,54,128,55,130,56,132,0,134,0,136,0,138,0,140,0,142,61,144,
		0,146,0,148,0,150,0,152,0,154,0,156,0,158,0,160,1,162,0,164,57,166,0,168,
		0,170,0,6,0,1,2,3,4,5,9,3,0,65,90,192,214,216,222,3,0,97,122,223,246,248,
		255,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,2,0,10,10,12,13,8,0,10,10,
		13,13,34,34,92,92,102,102,110,110,114,114,116,116,2,0,34,34,92,92,2,0,
		39,39,92,92,486,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,20,1,0,0,0,0,22,
		1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,
		0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,
		1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,
		0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,
		1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,
		0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,
		1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,
		0,0,0,102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,
		0,0,0,112,1,0,0,0,0,114,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,
		0,0,0,122,1,0,0,0,0,124,1,0,0,0,0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,
		0,0,1,140,1,0,0,0,2,142,1,0,0,0,2,144,1,0,0,0,2,146,1,0,0,0,3,148,1,0,
		0,0,4,150,1,0,0,0,4,152,1,0,0,0,4,154,1,0,0,0,5,156,1,0,0,0,5,158,1,0,
		0,0,5,160,1,0,0,0,5,162,1,0,0,0,5,164,1,0,0,0,5,166,1,0,0,0,6,172,1,0,
		0,0,8,177,1,0,0,0,10,180,1,0,0,0,12,191,1,0,0,0,14,193,1,0,0,0,16,195,
		1,0,0,0,18,197,1,0,0,0,20,200,1,0,0,0,22,230,1,0,0,0,24,232,1,0,0,0,26,
		237,1,0,0,0,28,243,1,0,0,0,30,247,1,0,0,0,32,249,1,0,0,0,34,251,1,0,0,
		0,36,253,1,0,0,0,38,255,1,0,0,0,40,257,1,0,0,0,42,259,1,0,0,0,44,261,1,
		0,0,0,46,263,1,0,0,0,48,265,1,0,0,0,50,267,1,0,0,0,52,269,1,0,0,0,54,271,
		1,0,0,0,56,273,1,0,0,0,58,275,1,0,0,0,60,277,1,0,0,0,62,279,1,0,0,0,64,
		281,1,0,0,0,66,283,1,0,0,0,68,288,1,0,0,0,70,290,1,0,0,0,72,293,1,0,0,
		0,74,296,1,0,0,0,76,299,1,0,0,0,78,302,1,0,0,0,80,304,1,0,0,0,82,306,1,
		0,0,0,84,309,1,0,0,0,86,312,1,0,0,0,88,315,1,0,0,0,90,318,1,0,0,0,92,321,
		1,0,0,0,94,324,1,0,0,0,96,327,1,0,0,0,98,330,1,0,0,0,100,333,1,0,0,0,102,
		336,1,0,0,0,104,339,1,0,0,0,106,343,1,0,0,0,108,347,1,0,0,0,110,351,1,
		0,0,0,112,354,1,0,0,0,114,358,1,0,0,0,116,360,1,0,0,0,118,363,1,0,0,0,
		120,366,1,0,0,0,122,370,1,0,0,0,124,373,1,0,0,0,126,375,1,0,0,0,128,377,
		1,0,0,0,130,383,1,0,0,0,132,388,1,0,0,0,134,392,1,0,0,0,136,399,1,0,0,
		0,138,410,1,0,0,0,140,412,1,0,0,0,142,417,1,0,0,0,144,422,1,0,0,0,146,
		430,1,0,0,0,148,434,1,0,0,0,150,439,1,0,0,0,152,444,1,0,0,0,154,449,1,
		0,0,0,156,453,1,0,0,0,158,458,1,0,0,0,160,462,1,0,0,0,162,467,1,0,0,0,
		164,472,1,0,0,0,166,476,1,0,0,0,168,480,1,0,0,0,170,483,1,0,0,0,172,173,
		5,109,0,0,173,174,5,101,0,0,174,175,5,109,0,0,175,176,5,111,0,0,176,7,
		1,0,0,0,177,178,5,111,0,0,178,179,5,112,0,0,179,9,1,0,0,0,180,186,3,12,
		3,0,181,185,5,95,0,0,182,185,3,18,6,0,183,185,3,12,3,0,184,181,1,0,0,0,
		184,182,1,0,0,0,184,183,1,0,0,0,185,188,1,0,0,0,186,184,1,0,0,0,186,187,
		1,0,0,0,187,11,1,0,0,0,188,186,1,0,0,0,189,192,3,14,4,0,190,192,3,16,5,
		0,191,189,1,0,0,0,191,190,1,0,0,0,192,13,1,0,0,0,193,194,7,0,0,0,194,15,
		1,0,0,0,195,196,7,1,0,0,196,17,1,0,0,0,197,198,7,2,0,0,198,19,1,0,0,0,
		199,201,3,18,6,0,200,199,1,0,0,0,201,202,1,0,0,0,202,200,1,0,0,0,202,203,
		1,0,0,0,203,21,1,0,0,0,204,205,5,34,0,0,205,206,5,34,0,0,206,207,5,34,
		0,0,207,211,1,0,0,0,208,210,9,0,0,0,209,208,1,0,0,0,210,213,1,0,0,0,211,
		212,1,0,0,0,211,209,1,0,0,0,212,214,1,0,0,0,213,211,1,0,0,0,214,215,5,
		34,0,0,215,216,5,34,0,0,216,231,5,34,0,0,217,218,5,39,0,0,218,219,5,39,
		0,0,219,220,5,39,0,0,220,224,1,0,0,0,221,223,9,0,0,0,222,221,1,0,0,0,223,
		226,1,0,0,0,224,225,1,0,0,0,224,222,1,0,0,0,225,227,1,0,0,0,226,224,1,
		0,0,0,227,228,5,39,0,0,228,229,5,39,0,0,229,231,5,39,0,0,230,204,1,0,0,
		0,230,217,1,0,0,0,231,23,1,0,0,0,232,233,5,34,0,0,233,234,1,0,0,0,234,
		235,6,9,0,0,235,236,6,9,1,0,236,25,1,0,0,0,237,238,5,39,0,0,238,239,1,
		0,0,0,239,240,6,10,0,0,240,241,6,10,2,0,241,27,1,0,0,0,242,244,7,3,0,0,
		243,242,1,0,0,0,244,245,1,0,0,0,245,243,1,0,0,0,245,246,1,0,0,0,246,29,
		1,0,0,0,247,248,5,40,0,0,248,31,1,0,0,0,249,250,5,41,0,0,250,33,1,0,0,
		0,251,252,5,91,0,0,252,35,1,0,0,0,253,254,5,93,0,0,254,37,1,0,0,0,255,
		256,5,58,0,0,256,39,1,0,0,0,257,258,5,44,0,0,258,41,1,0,0,0,259,260,5,
		59,0,0,260,43,1,0,0,0,261,262,5,43,0,0,262,45,1,0,0,0,263,264,5,45,0,0,
		264,47,1,0,0,0,265,266,5,42,0,0,266,49,1,0,0,0,267,268,5,47,0,0,268,51,
		1,0,0,0,269,270,5,124,0,0,270,53,1,0,0,0,271,272,5,38,0,0,272,55,1,0,0,
		0,273,274,5,60,0,0,274,57,1,0,0,0,275,276,5,62,0,0,276,59,1,0,0,0,277,
		278,5,61,0,0,278,61,1,0,0,0,279,280,5,46,0,0,280,63,1,0,0,0,281,282,5,
		37,0,0,282,65,1,0,0,0,283,284,5,123,0,0,284,285,1,0,0,0,285,286,6,30,0,
		0,286,287,6,30,3,0,287,67,1,0,0,0,288,289,5,125,0,0,289,69,1,0,0,0,290,
		291,5,61,0,0,291,292,5,61,0,0,292,71,1,0,0,0,293,294,5,33,0,0,294,295,
		5,61,0,0,295,73,1,0,0,0,296,297,5,60,0,0,297,298,5,61,0,0,298,75,1,0,0,
		0,299,300,5,62,0,0,300,301,5,61,0,0,301,77,1,0,0,0,302,303,5,126,0,0,303,
		79,1,0,0,0,304,305,5,94,0,0,305,81,1,0,0,0,306,307,5,60,0,0,307,308,5,
		60,0,0,308,83,1,0,0,0,309,310,5,62,0,0,310,311,5,62,0,0,311,85,1,0,0,0,
		312,313,5,42,0,0,313,314,5,42,0,0,314,87,1,0,0,0,315,316,5,43,0,0,316,
		317,5,61,0,0,317,89,1,0,0,0,318,319,5,45,0,0,319,320,5,61,0,0,320,91,1,
		0,0,0,321,322,5,42,0,0,322,323,5,61,0,0,323,93,1,0,0,0,324,325,5,47,0,
		0,325,326,5,61,0,0,326,95,1,0,0,0,327,328,5,37,0,0,328,329,5,61,0,0,329,
		97,1,0,0,0,330,331,5,38,0,0,331,332,5,61,0,0,332,99,1,0,0,0,333,334,5,
		124,0,0,334,335,5,61,0,0,335,101,1,0,0,0,336,337,5,94,0,0,337,338,5,61,
		0,0,338,103,1,0,0,0,339,340,5,60,0,0,340,341,5,60,0,0,341,342,5,61,0,0,
		342,105,1,0,0,0,343,344,5,62,0,0,344,345,5,62,0,0,345,346,5,61,0,0,346,
		107,1,0,0,0,347,348,5,42,0,0,348,349,5,42,0,0,349,350,5,61,0,0,350,109,
		1,0,0,0,351,352,5,47,0,0,352,353,5,47,0,0,353,111,1,0,0,0,354,355,5,47,
		0,0,355,356,5,47,0,0,356,357,5,61,0,0,357,113,1,0,0,0,358,359,5,64,0,0,
		359,115,1,0,0,0,360,361,5,64,0,0,361,362,5,61,0,0,362,117,1,0,0,0,363,
		364,5,45,0,0,364,365,5,62,0,0,365,119,1,0,0,0,366,367,5,46,0,0,367,368,
		5,46,0,0,368,369,5,46,0,0,369,121,1,0,0,0,370,371,5,58,0,0,371,372,5,61,
		0,0,372,123,1,0,0,0,373,374,5,36,0,0,374,125,1,0,0,0,375,376,5,33,0,0,
		376,127,1,0,0,0,377,378,5,63,0,0,378,129,1,0,0,0,379,384,3,132,63,0,380,
		384,3,134,64,0,381,384,3,136,65,0,382,384,3,28,11,0,383,379,1,0,0,0,383,
		380,1,0,0,0,383,381,1,0,0,0,383,382,1,0,0,0,384,385,1,0,0,0,385,386,6,
		62,4,0,386,131,1,0,0,0,387,389,7,4,0,0,388,387,1,0,0,0,389,390,1,0,0,0,
		390,388,1,0,0,0,390,391,1,0,0,0,391,133,1,0,0,0,392,396,5,35,0,0,393,395,
		8,5,0,0,394,393,1,0,0,0,395,398,1,0,0,0,396,394,1,0,0,0,396,397,1,0,0,
		0,397,135,1,0,0,0,398,396,1,0,0,0,399,401,5,92,0,0,400,402,3,132,63,0,
		401,400,1,0,0,0,401,402,1,0,0,0,402,408,1,0,0,0,403,405,5,13,0,0,404,403,
		1,0,0,0,404,405,1,0,0,0,405,406,1,0,0,0,406,409,5,10,0,0,407,409,2,12,
		13,0,408,404,1,0,0,0,408,407,1,0,0,0,409,137,1,0,0,0,410,411,7,6,0,0,411,
		139,1,0,0,0,412,413,3,138,66,0,413,414,1,0,0,0,414,415,6,67,0,0,415,416,
		6,67,5,0,416,141,1,0,0,0,417,418,5,92,0,0,418,419,1,0,0,0,419,420,6,68,
		0,0,420,421,6,68,6,0,421,143,1,0,0,0,422,423,5,34,0,0,423,424,1,0,0,0,
		424,425,6,69,7,0,425,426,6,69,8,0,426,145,1,0,0,0,427,431,8,7,0,0,428,
		429,5,34,0,0,429,431,5,34,0,0,430,427,1,0,0,0,430,428,1,0,0,0,431,432,
		1,0,0,0,432,433,6,70,0,0,433,147,1,0,0,0,434,435,3,138,66,0,435,436,1,
		0,0,0,436,437,6,71,0,0,437,438,6,71,5,0,438,149,1,0,0,0,439,440,5,92,0,
		0,440,441,1,0,0,0,441,442,6,72,0,0,442,443,6,72,9,0,443,151,1,0,0,0,444,
		445,5,39,0,0,445,446,1,0,0,0,446,447,6,73,7,0,447,448,6,73,8,0,448,153,
		1,0,0,0,449,450,8,8,0,0,450,451,1,0,0,0,451,452,6,74,0,0,452,155,1,0,0,
		0,453,454,3,66,30,0,454,455,1,0,0,0,455,456,6,75,0,0,456,457,6,75,3,0,
		457,157,1,0,0,0,458,459,3,168,81,0,459,460,1,0,0,0,460,461,6,76,0,0,461,
		159,1,0,0,0,462,463,3,68,31,0,463,464,4,77,0,0,464,465,1,0,0,0,465,466,
		6,77,5,0,466,161,1,0,0,0,467,468,3,68,31,0,468,469,1,0,0,0,469,470,6,78,
		0,0,470,471,6,78,5,0,471,163,1,0,0,0,472,473,5,0,0,1,473,474,1,0,0,0,474,
		475,6,79,5,0,475,165,1,0,0,0,476,477,9,0,0,0,477,478,1,0,0,0,478,479,6,
		80,0,0,479,167,1,0,0,0,480,481,3,170,82,0,481,482,9,0,0,0,482,169,1,0,
		0,0,483,484,5,92,0,0,484,171,1,0,0,0,21,0,1,2,3,4,5,184,186,191,202,211,
		224,230,245,383,390,396,401,404,408,430,10,3,0,0,2,2,0,2,4,0,5,5,0,6,0,
		0,4,0,0,5,1,0,7,6,0,2,0,0,5,3,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}

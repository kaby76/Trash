//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Abnf.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAbnfListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AbnfBaseListener : IAbnfListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.rulelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRulelist([NotNull] AbnfParser.RulelistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.rulelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRulelist([NotNull] AbnfParser.RulelistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.rule_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRule_([NotNull] AbnfParser.Rule_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.rule_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRule_([NotNull] AbnfParser.Rule_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.rulename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRulename([NotNull] AbnfParser.RulenameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.rulename"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRulename([NotNull] AbnfParser.RulenameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.defined_as"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefined_as([NotNull] AbnfParser.Defined_asContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.defined_as"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefined_as([NotNull] AbnfParser.Defined_asContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElements([NotNull] AbnfParser.ElementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.elements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElements([NotNull] AbnfParser.ElementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.c_wsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC_wsp([NotNull] AbnfParser.C_wspContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.c_wsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC_wsp([NotNull] AbnfParser.C_wspContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.c_nl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterC_nl([NotNull] AbnfParser.C_nlContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.c_nl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitC_nl([NotNull] AbnfParser.C_nlContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.alternation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlternation([NotNull] AbnfParser.AlternationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.alternation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlternation([NotNull] AbnfParser.AlternationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.concatenation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatenation([NotNull] AbnfParser.ConcatenationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.concatenation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatenation([NotNull] AbnfParser.ConcatenationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.repetition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepetition([NotNull] AbnfParser.RepetitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.repetition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepetition([NotNull] AbnfParser.RepetitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.repeat_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeat_([NotNull] AbnfParser.Repeat_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.repeat_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeat_([NotNull] AbnfParser.Repeat_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] AbnfParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] AbnfParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroup([NotNull] AbnfParser.GroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroup([NotNull] AbnfParser.GroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOption([NotNull] AbnfParser.OptionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOption([NotNull] AbnfParser.OptionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.char_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChar_val([NotNull] AbnfParser.Char_valContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.char_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChar_val([NotNull] AbnfParser.Char_valContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.num_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum_val([NotNull] AbnfParser.Num_valContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.num_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum_val([NotNull] AbnfParser.Num_valContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AbnfParser.prose_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProse_val([NotNull] AbnfParser.Prose_valContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AbnfParser.prose_val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProse_val([NotNull] AbnfParser.Prose_valContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SJMachines.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISJMachinesListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SJMachinesBaseListener : ISJMachinesListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.prods"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProds([NotNull] SJMachinesParser.ProdsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.prods"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProds([NotNull] SJMachinesParser.ProdsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.prod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProd([NotNull] SJMachinesParser.ProdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.prod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProd([NotNull] SJMachinesParser.ProdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.lhs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLhs([NotNull] SJMachinesParser.LhsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.lhs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLhs([NotNull] SJMachinesParser.LhsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.rhs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRhs([NotNull] SJMachinesParser.RhsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.rhs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRhs([NotNull] SJMachinesParser.RhsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] SJMachinesParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] SJMachinesParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SJMachinesParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSymbol([NotNull] SJMachinesParser.SymbolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SJMachinesParser.symbol"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSymbol([NotNull] SJMachinesParser.SymbolContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}

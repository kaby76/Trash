[{"FileName":"x","IdentityOfParser":"ANTLRv4Parser.g4","IdentityOfLexer":"ANTLRv4Lexer.g4","ModeNames":["DEFAULT_MODE","Argument","LexerCharSet"],"ChannelNames":["DEFAULT_TOKEN_CHANNEL","HIDDEN","OFF_CHANNEL","COMMENT"],"LiteralNames":[null,null,null,null,null,null,null,"\u0027=\u0027",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\u0027[\u0027",null,null,null,"\u0027import\u0027","\u0027fragment\u0027","\u0027lexer\u0027","\u0027parser\u0027","\u0027grammar\u0027","\u0027protected\u0027","\u0027public\u0027","\u0027private\u0027","\u0027returns\u0027","\u0027locals\u0027","\u0027throws\u0027","\u0027catch\u0027","\u0027finally\u0027","\u0027mode\u0027","\u0027:\u0027","\u0027::\u0027","\u0027,\u0027","\u0027;\u0027","\u0027(\u0027","\u0027)\u0027","\u0027}\u0027","\u0027-\u003E\u0027","\u0027\u003C\u0027","\u0027\u003E\u0027","\u0027?\u0027","\u0027*\u0027","\u0027\u002B=\u0027","\u0027\u002B\u0027","\u0027|\u0027","\u0027$\u0027","\u0027..\u0027","\u0027.\u0027","\u0027@\u0027","\u0027#\u0027","\u0027~\u0027"],"SymbolicNames":[null,null,null,null,"ACTION","ARG_ACTION","ARG_OR_CHARSET","ASSIGN","LEXER_CHAR_SET","RULE_REF","SEMPRED","STRING_LITERAL",null,"TOKEN_REF","UNICODE_ESC","UNICODE_EXTENDED_ESC","WS","ALT","BLOCK","CLOSURE","ELEMENT_OPTIONS","EPSILON","LEXER_ACTION_CALL","LEXER_ALT_ACTION","OPTIONAL","POSITIVE_CLOSURE","RULE","RULEMODIFIERS","RULES","SET","WILDCARD","DOC_COMMENT","BLOCK_COMMENT","LINE_COMMENT","INT","UNTERMINATED_STRING_LITERAL","BEGIN_ARGUMENT","OPTIONS","TOKENS","CHANNELS","IMPORT","FRAGMENT","LEXER","PARSER","GRAMMAR","PROTECTED","PUBLIC","PRIVATE","RETURNS","LOCALS","THROWS","CATCH","FINALLY","MODE","COLON","COLONCOLON","COMMA","SEMI","LPAREN","RPAREN","RBRACE","RARROW","LT","GT","QUESTION","STAR","PLUS_ASSIGN","PLUS","OR","DOLLAR","RANGE","DOT","AT","POUND","NOT","ID","END_ARGUMENT","UNTERMINATED_ARGUMENT","ARGUMENT_CONTENT","UNTERMINATED_CHAR_SET"],"LexerRuleNames":["DOC_COMMENT","BLOCK_COMMENT","LINE_COMMENT","INT","STRING_LITERAL","UNTERMINATED_STRING_LITERAL","BEGIN_ARGUMENT","ACTION","NESTED_ACTION","OPTIONS","TOKENS","CHANNELS","IMPORT","FRAGMENT","LEXER","PARSER","GRAMMAR","PROTECTED","PUBLIC","PRIVATE","RETURNS","LOCALS","THROWS","CATCH","FINALLY","MODE","COLON","COLONCOLON","COMMA","SEMI","LPAREN","RPAREN","RBRACE","RARROW","LT","GT","ASSIGN","QUESTION","STAR","PLUS_ASSIGN","PLUS","OR","DOLLAR","RANGE","DOT","AT","POUND","NOT","ID","WS","NESTED_ARGUMENT","ARGUMENT_ESCAPE","ARGUMENT_STRING_LITERAL","ARGUMENT_CHAR_LITERAL","END_ARGUMENT","UNTERMINATED_ARGUMENT","ARGUMENT_CONTENT","LEXER_CHAR_SET_BODY","LEXER_CHAR_SET","UNTERMINATED_CHAR_SET","ESC_SEQUENCE","HexDigit","UnicodeESC","DoubleQuoteLiteral","TripleQuoteLiteral","BacktickQuoteLiteral","NameChar","NameStartChar"],"TokenTypeMap":["ACTION",4,"ARG_ACTION",5,"ARG_OR_CHARSET",6,"\u0027=\u0027",7,"ASSIGN",7,"LEXER_CHAR_SET",8,"RULE_REF",9,"SEMPRED",10,"STRING_LITERAL",11,"TOKEN_REF",13,"UNICODE_ESC",14,"UNICODE_EXTENDED_ESC",15,"WS",16,"ALT",17,"BLOCK",18,"CLOSURE",19,"ELEMENT_OPTIONS",20,"EPSILON",21,"LEXER_ACTION_CALL",22,"LEXER_ALT_ACTION",23,"OPTIONAL",24,"POSITIVE_CLOSURE",25,"RULE",26,"RULEMODIFIERS",27,"RULES",28,"SET",29,"WILDCARD",30,"DOC_COMMENT",31,"BLOCK_COMMENT",32,"LINE_COMMENT",33,"INT",34,"UNTERMINATED_STRING_LITERAL",35,"\u0027[\u0027",36,"BEGIN_ARGUMENT",36,"OPTIONS",37,"TOKENS",38,"CHANNELS",39,"\u0027import\u0027",40,"IMPORT",40,"\u0027fragment\u0027",41,"FRAGMENT",41,"\u0027lexer\u0027",42,"LEXER",42,"\u0027parser\u0027",43,"PARSER",43,"\u0027grammar\u0027",44,"GRAMMAR",44,"\u0027protected\u0027",45,"PROTECTED",45,"\u0027public\u0027",46,"PUBLIC",46,"\u0027private\u0027",47,"PRIVATE",47,"\u0027returns\u0027",48,"RETURNS",48,"\u0027locals\u0027",49,"LOCALS",49,"\u0027throws\u0027",50,"THROWS",50,"\u0027catch\u0027",51,"CATCH",51,"\u0027finally\u0027",52,"FINALLY",52,"\u0027mode\u0027",53,"MODE",53,"\u0027:\u0027",54,"COLON",54,"\u0027::\u0027",55,"COLONCOLON",55,"\u0027,\u0027",56,"COMMA",56,"\u0027;\u0027",57,"SEMI",57,"\u0027(\u0027",58,"LPAREN",58,"\u0027)\u0027",59,"RPAREN",59,"\u0027}\u0027",60,"RBRACE",60,"\u0027-\u003E\u0027",61,"RARROW",61,"\u0027\u003C\u0027",62,"LT",62,"\u0027\u003E\u0027",63,"GT",63,"\u0027?\u0027",64,"QUESTION",64,"\u0027*\u0027",65,"STAR",65,"\u0027\u002B=\u0027",66,"PLUS_ASSIGN",66,"\u0027\u002B\u0027",67,"PLUS",67,"\u0027|\u0027",68,"OR",68,"\u0027$\u0027",69,"DOLLAR",69,"\u0027..\u0027",70,"RANGE",70,"\u0027.\u0027",71,"DOT",71,"\u0027@\u0027",72,"AT",72,"\u0027#\u0027",73,"POUND",73,"\u0027~\u0027",74,"NOT",74,"ID",75,"END_ARGUMENT",76,"UNTERMINATED_ARGUMENT",77,"ARGUMENT_CONTENT",78,"UNTERMINATED_CHAR_SET",79,"EOF",-1],"ParserRuleNames":["grammarSpec","grammarDecl","grammarType","prequelConstruct","optionsSpec","option","optionValue","delegateGrammars","delegateGrammar","tokensSpec","channelsSpec","idList","action_","actionScopeName","actionBlock","argActionBlock","modeSpec","rules","ruleSpec","parserRuleSpec","exceptionGroup","exceptionHandler","finallyClause","rulePrequel","ruleReturns","throwsSpec","localsSpec","ruleAction","ruleModifiers","ruleModifier","ruleBlock","ruleAltList","labeledAlt","lexerRuleSpec","lexerRuleBlock","lexerAltList","lexerAlt","lexerElements","lexerElement","lexerBlock","lexerCommands","lexerCommand","lexerCommandName","lexerCommandExpr","altList","alternative","element","predicateOptions","predicateOption","labeledElement","ebnf","blockSuffix","ebnfSuffix","lexerAtom","atom","wildcard","notSet","blockSet","setElement","block","ruleref","characterRange","terminalDef","elementOptions","elementOption","identifier","qualifiedIdentifier"],"Nodes":[[2,0,"grammarSpec",[[2,1,"grammarDecl",[[2,2,"grammarType",[[5,"WS","\t",2,16,[]],[2,-1,"GRAMMAR",[[1,"grammar",0,0,[]]]]]],[2,65,"identifier",[[5,"WS"," ",2,16,[]],[2,-1,"TOKEN_REF",[[1,"Expresion",0,0,[]]]]]],[2,-1,"SEMI",[[1,";",0,0,[]]]]]],[2,17,"rules",[[2,18,"ruleSpec",[[2,19,"parserRuleSpec",[[5,"WS","\r\n\t",2,16,[]],[2,-1,"RULE_REF",[[1,"s",0,0,[]]]],[5,"WS"," ",2,16,[]],[2,-1,"COLON",[[1,":",0,0,[]]]],[2,30,"ruleBlock",[[2,31,"ruleAltList",[[2,32,"labeledAlt",[[2,45,"alternative",[[2,46,"element",[[2,54,"atom",[[2,60,"ruleref",[[5,"WS"," ",2,16,[]],[2,-1,"RULE_REF",[[1,"e",0,0,[]]]]]]]]]]]]]]]]]],[5,"WS"," ",2,16,[]],[2,-1,"SEMI",[[1,";",0,0,[]]]],[2,20,"exceptionGroup",[]]]]]],[2,18,"ruleSpec",[[2,19,"parserRuleSpec",[[5,"WS","\r\n\t",2,16,[]],[2,-1,"RULE_REF",[[1,"e",0,0,[]]]],[5,"WS"," ",2,16,[]],[2,-1,"COLON",[[1,":",0,0,[]]]],[2,30,"ruleBlock",[[2,31,"ruleAltList",[[2,32,"labeledAlt",[[2,45,"alternative",[[2,46,"element",[[2,54,"atom",[[2,60,"ruleref",[[5,"WS"," ",2,16,[]],[2,-1,"RULE_REF",[[1,"e",0,0,[]]]]]]]]]],[2,46,"element",[[2,54,"atom",[[2,62,"terminalDef",[[5,"WS"," ",2,16,[]],[2,-1,"STRING_LITERAL",[[1,"\u0027*\u0027",0,0,[]]]]]]]]]],[2,46,"element",[[2,54,"atom",[[2,60,"ruleref",[[5,"WS"," ",2,16,[]],[2,-1,"RULE_REF",[[1,"e",0,0,[]]]]]]]]]]]],[5,"WS","       ",2,16,[]],[2,-1,"POUND",[[1,"#",0,0,[]]]],[2,65,"identifier",[[5,"WS"," ",2,16,[]],[2,-1,"TOKEN_REF",[[1,"Mult",0,0,[]]]]]]]],[5,"WS","\r\n\t    ",2,16,[]],[2,-1,"OR",[[1,"|",0,0,[]]]],[2,32,"labeledAlt",[[2,45,"alternative",[[2,46,"element",[[2,54,"atom",[[2,62,"terminalDef",[[5,"WS"," ",2,16,[]],[2,-1,"TOKEN_REF",[[1,"INT",0,0,[]]]]]]]]]]]],[5,"WS","           ",2,16,[]],[2,-1,"POUND",[[1,"#",0,0,[]]]],[2,65,"identifier",[[5,"WS"," ",2,16,[]],[2,-1,"RULE_REF",[[1,"primary",0,0,[]]]]]]]]]]]],[5,"WS","\r\n\t    ",2,16,[]],[2,-1,"SEMI",[[1,";",0,0,[]]]],[2,20,"exceptionGroup",[]]]]]],[2,18,"ruleSpec",[[2,33,"lexerRuleSpec",[[5,"WS","\r\n\t",2,16,[]],[2,-1,"TOKEN_REF",[[1,"INT",0,0,[]]]],[5,"WS"," ",2,16,[]],[2,-1,"COLON",[[1,":",0,0,[]]]],[2,34,"lexerRuleBlock",[[2,35,"lexerAltList",[[2,36,"lexerAlt",[[2,37,"lexerElements",[[2,38,"lexerElement",[[2,53,"lexerAtom",[[5,"WS"," ",2,16,[]],[2,-1,"LEXER_CHAR_SET",[[1,"[0-9]",0,0,[]]]]]],[2,52,"ebnfSuffix",[[2,-1,"PLUS",[[1,"\u002B",0,0,[]]]]]]]]]]]]]]]],[5,"WS"," ",2,16,[]],[2,-1,"SEMI",[[1,";",0,0,[]]]]]]]],[2,18,"ruleSpec",[[2,33,"lexerRuleSpec",[[5,"WS","\r\n\t",2,16,[]],[2,-1,"TOKEN_REF",[[1,"WS",0,0,[]]]],[5,"WS"," ",2,16,[]],[2,-1,"COLON",[[1,":",0,0,[]]]],[2,34,"lexerRuleBlock",[[2,35,"lexerAltList",[[2,36,"lexerAlt",[[2,37,"lexerElements",[[2,38,"lexerElement",[[2,53,"lexerAtom",[[5,"WS"," ",2,16,[]],[2,-1,"LEXER_CHAR_SET",[[1,"[ \\t\\n]",0,0,[]]]]]],[2,52,"ebnfSuffix",[[2,-1,"PLUS",[[1,"\u002B",0,0,[]]]]]]]]]],[2,40,"lexerCommands",[[5,"WS"," ",2,16,[]],[2,-1,"RARROW",[[1,"-\u003E",0,0,[]]]],[2,41,"lexerCommand",[[2,42,"lexerCommandName",[[2,65,"identifier",[[5,"WS"," ",2,16,[]],[2,-1,"RULE_REF",[[1,"skip",0,0,[]]]]]]]]]]]]]]]]]],[5,"WS"," ",2,16,[]],[2,-1,"SEMI",[[1,";",0,0,[]]]]]]]]]],[5,"WS","\r\n",2,16,[]],[2,-1,"EOF",[[1,"",0,0,[]]]]]]]}]
